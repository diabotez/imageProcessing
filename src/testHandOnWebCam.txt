#include <cstdlib>
#include <vector>
#include <iostream>
#include <opencv2\opencv.hpp>
#include <opencv2\highgui\highgui.hpp>
#include <opencv2\imgproc\imgproc.hpp>
using namespace cv;
using namespace std;


//global variable
CascadeClassifier open_hand_cascade;
struct Position {
    int x;
    int y;
};
Position currentPosition;
///////

Mat detectHand(Mat image) {
	Mat hand;
	std::vector<Rect> hands;

	open_hand_cascade.detectMultiScale(image,hands,1.1,3,CV_HAAR_FIND_BIGGEST_OBJECT,Size(30,30),Size(500,500));

	if(hands.size())
	{
		hand = image(hands[0]);
		//rectangle(image,Point(hands[0].x,hands[0].y),Point(hands[0].x+hands[0].width,hands[0].y+hands[0].height),Scalar(255,0,0),1,8,0);
        currentPosition.x = hands[0].x + (hands[0].width/2);
        currentPosition.y = hands[0].y + (hands[0].height/2);
	}
	return hand;
}

int main(void)
{
	Mat imageOriginal, hand, img;
	unsigned int key = -1, i, j=0;
    char denumiri[8][20] = {"inputData/hand1.jpg","inputData/hand2.jpg","inputData/hand3.jpg","inputData/hand4.jpg","inputData/hand5.jpg","inputData/hand6.jpg","inputData/hand7.jpg","inputData/hand7.jpg"};
    int cnt = 8;

	if(!open_hand_cascade.load("openhand-haar.xml")) {
		std::cout<<"eror loading open hand \n";
		return 0;
	} else
		std::cout<<"hand loaded \n";

	for(i = 0; i < 8 ; i++) {
        img = imread(denumiri[i],1);
        hand = detectHand(img);
		if(!hand.empty()) {
            cout <<"x= " << currentPosition.x << "; y= " << currentPosition.y ;
            cout << "; rezolutie: " << img.rows << "x" << img.cols << endl;
		}
        //imshow("img",img);
        key = waitKey(1000);
	}//end while sau for
    cout<<"exit..."<<endl;
	return 0;
}
